{
    "name": "muse_eurosat_Mdataset_resnet34_ch348_s1_8",
    "cudnn": {
        "benchmark": false,
        "deterministic": true
    },
    "datasets": {
        "eurosat": {
            "type": "thelper.data.geo.parsers.ImageFolderGDataset",
            "params": {
                "root": "/misc/data20/visi/CS-CANADA/datasets/eurosat/rivers_highway_modified_17",
                "channels": [
                    3,
                    4,
                    8
                ]
            }
        },
        "muse-test": {
            "type": "thelper.data.geo.parsers.ImageFolderGDataset",
            "params": {
                "root": "/misc/data20/visi/CS-CANADA/annotations/patches8_data_S2A_MSIL1C_20170608T161031_renamed",
                "channels": [
                    3,
                    4,
                    8
                ]
            }
        }
    },
    "data_config": {
        "batch_size": 60,
        "valid_seed": 443,
        "test_seed": 490,
        "torch_seed": 560,
        "numpy_seed": 665,
        "random_seed": 705,
        "shuffle": true,
        "workers": 8,
        "pin_memory": false,
        "drop_last": true,
        "skip_class_balancing": true,
        "transforms": [],
        "base_transforms": [
            {
                "operation": "thelper.transforms.ImageTransformWrapper",
                "params": {
                    "operation": "thelper.transforms.NormalizeZeroMeanUnitVar",
                    "params": {
                        "mean": [
                            913.294,
                            634.823,
                            2750.945
                        ],
                        "std": [
                            229.093,
                            384.313,
                            1016.149
                        ]
                    }
                }
            },
            {
                "operation": "thelper.transforms.ImageTransformWrapper",
                "params": {
                    "operation": "thelper.transforms.operations.CenterCrop",
                    "params": {
                        "size": [
                            7,
                            7
                        ]
                    }
                }
            },
            {
                "operation": "thelper.transforms.ImageTransformWrapper",
                "params": {
                    "operation": "torchvision.transforms.ToTensor"
                }
            }
        ],
        "train_split": {
            "eurosat": 0.8
        },
        "valid_split": {
            "eurosat": 0.2
        },
        "test_split": {
            "muse-test": 1
        }
    },
    "model": {
        "type": "thelper.nn.resnet.ResNet",
        "params": {
            "conv1_config":[7,2,3],
            "layers": [2, 2, 2, 2],
            "flexible_input_res": true
        }
    },
    "trainer": {
        "type": "thelper.train.ImageClassifTrainer",
        "device": "cuda:all",
        "epochs": 80,
        "save_freq": 1,
        "monitor": "accuracy",
        "use_tbx": true,
        "optimization": {
            "loss": {
                "type": "torch.nn.CrossEntropyLoss",
                "params": {}
            },
            "optimizer": {
                "type": "torch.optim.Adam",
                "params": {
                    "lr": 0.0005
                }
            },
            "scheduler": {
                "type": "torch.optim.lr_scheduler.ReduceLROnPlateau",
                "params": {
                    "mode": "max",
                    "factor": 0.1,
                    "patience": 10,
                    "verbose": true,
                    "threshold": 0.0001,
                    "threshold_mode": "rel"
                },
                "step_metric": "accuracy"
            }
        },
        "metrics": {
            "accuracy": {
                "type": "thelper.optim.Accuracy",
                "params": {
                    "top_k": 1
                }
            },
            "confmat": {
                "type": "thelper.train.ConfusionMatrix"
            },
            "fullreport": {
                "type": "thelper.optim.ClassifReport"
            }
        }
    }
}
